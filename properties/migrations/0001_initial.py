# Generated by Django 5.1.12 on 2025-09-07 08:10

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExchangeOffer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("my_title", models.CharField(max_length=200)),
                ("my_address", models.CharField(blank=True, max_length=255, null=True)),
                ("my_postcode", models.CharField(blank=True, max_length=16, null=True)),
                ("my_city", models.CharField(blank=True, max_length=120)),
                ("my_province", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "my_property_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("appartement", "Appartement"),
                            ("eengezinswoning", "Eengezinswoning"),
                            ("rijtjeshuis", "Rijtjeshuis"),
                            ("vrijstaand", "Vrijstaand"),
                            ("studio", "Studio"),
                            ("tussenwoning", "Tussenwoning"),
                            ("hoekwoning", "Hoekwoning"),
                            ("villa", "Villa"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "my_tenure",
                    models.CharField(
                        blank=True,
                        choices=[("HUUR", "Huur"), ("KOOP", "Koop")],
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "my_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "my_rent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("my_description", models.TextField(blank=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "my_living_area",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "my_rooms",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "my_bedrooms",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("my_floor", models.IntegerField(blank=True, null=True)),
                (
                    "my_floors",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("my_balcony", models.BooleanField(default=False)),
                ("my_terrace", models.BooleanField(default=False)),
                ("my_garden", models.BooleanField(default=False)),
                ("my_storage", models.BooleanField(default=False)),
                ("shed", models.BooleanField(default=False)),
                ("my_attic", models.BooleanField(default=False)),
                ("my_cellar", models.BooleanField(default=False)),
                ("my_parking_street", models.BooleanField(default=False)),
                ("my_parking_garage", models.BooleanField(default=False)),
                ("my_parking_private", models.BooleanField(default=False)),
                ("my_near_shops", models.BooleanField(default=False)),
                ("my_near_schools", models.BooleanField(default=False)),
                ("my_ov", models.BooleanField(default=False)),
                ("wheelchair", models.BooleanField(default=False)),
                ("pets_allowed", models.BooleanField(default=False)),
                ("new_build", models.BooleanField(default=False)),
                (
                    "my_cover",
                    models.ImageField(
                        blank=True, null=True, upload_to="exchange_covers/"
                    ),
                ),
                (
                    "my_floorplan",
                    models.ImageField(
                        blank=True, null=True, upload_to="exchange_floorplans/"
                    ),
                ),
                ("want_city", models.CharField(blank=True, max_length=120)),
                (
                    "want_property_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("appartement", "Appartement"),
                            ("eengezinswoning", "Eengezinswoning"),
                            ("rijtjeshuis", "Rijtjeshuis"),
                            ("vrijstaand", "Vrijstaand"),
                            ("studio", "Studio"),
                            ("tussenwoning", "Tussenwoning"),
                            ("hoekwoning", "Hoekwoning"),
                            ("villa", "Villa"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "want_min_area",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "want_min_rooms",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("want_balcony", models.BooleanField(default=False)),
                ("want_terrace", models.BooleanField(default=False)),
                ("want_garden", models.BooleanField(default=False)),
                ("want_storage", models.BooleanField(default=False)),
                ("want_attic", models.BooleanField(default=False)),
                ("want_cellar", models.BooleanField(default=False)),
                ("want_parking_private", models.BooleanField(default=False)),
                ("want_ov", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=False)),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exchange_offers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="ExchangeOfferImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="exchange_offers/")),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="properties.exchangeoffer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Foto bij woningruil",
                "verbose_name_plural": "Fotoâ€™s bij woningruilen",
            },
        ),
        migrations.CreateModel(
            name="MarketListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=220, unique=True)),
                ("address", models.CharField(max_length=255)),
                ("postcode", models.CharField(blank=True, max_length=16)),
                ("city", models.CharField(max_length=120)),
                ("province", models.CharField(blank=True, max_length=64)),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("appartement", "Appartement"),
                            ("eengezinswoning", "Eengezinswoning"),
                            ("rijtjeshuis", "Rijtjeshuis"),
                            ("vrijstaand", "Vrijstaand"),
                            ("studio", "Studio"),
                            ("tussenwoning", "Tussenwoning"),
                            ("hoekwoning", "Hoekwoning"),
                            ("villa", "Villa"),
                        ],
                        max_length=20,
                    ),
                ),
                ("build_year", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "living_area",
                    models.PositiveIntegerField(
                        help_text="mÂ²",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "lot_area",
                    models.PositiveIntegerField(
                        blank=True, help_text="Perceel mÂ²", null=True
                    ),
                ),
                (
                    "rooms",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("bedrooms", models.PositiveIntegerField(blank=True, null=True)),
                ("bathrooms", models.PositiveIntegerField(blank=True, null=True)),
                ("floors", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "listing_kind",
                    models.CharField(
                        choices=[("HUUR", "Huur"), ("KOOP", "Koop")],
                        default="KOOP",
                        max_length=8,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("garden", models.BooleanField(default=False)),
                ("balcony", models.BooleanField(default=False)),
                ("terrace", models.BooleanField(default=False)),
                ("roof_terrace", models.BooleanField(default=False)),
                ("storage", models.BooleanField(default=False)),
                ("shed", models.BooleanField(default=False)),
                ("parking_garage", models.BooleanField(default=False)),
                ("parking_spot", models.BooleanField(default=False)),
                (
                    "energy_label",
                    models.CharField(
                        choices=[
                            ("A++++", "A++++"),
                            ("A+++", "A+++"),
                            ("A++", "A++"),
                            ("A+", "A+"),
                            ("A", "A"),
                            ("B", "B"),
                            ("C", "C"),
                            ("D", "D"),
                            ("E", "E"),
                            ("F", "F"),
                            ("G", "G"),
                            ("ONBEKEND", "Onbekend"),
                        ],
                        default="ONBEKEND",
                        max_length=10,
                    ),
                ),
                ("solar_panels", models.BooleanField(default=False)),
                ("heat_pump", models.BooleanField(default=False)),
                ("wheelchair_accessible", models.BooleanField(default=False)),
                ("elevator", models.BooleanField(default=False)),
                ("new_build", models.BooleanField(default=False)),
                (
                    "service_costs",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "deposit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("available_from", models.DateField(blank=True, null=True)),
                (
                    "rental_term",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BEPAALDE_TIJD", "Bepaalde tijd"),
                            ("ONBEPAALDE_TIJD", "Onbepaalde tijd"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "finish",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("KAAL", "Kaal"),
                            ("GESTOFFEERD", "Gestoffeerd"),
                            ("GEMEUBILEERD", "Gemeubileerd"),
                        ],
                        max_length=20,
                    ),
                ),
                ("pets_allowed", models.BooleanField(default=False)),
                ("smoking_allowed", models.BooleanField(default=False)),
                (
                    "suitable_for",
                    models.TextField(
                        blank=True, help_text="CSV: studenten, gezin, expats"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("is_published", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="listings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MarketListingImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="listing_images/")),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="properties.marketlisting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Woning (makelaar)",
                "verbose_name_plural": "Woningen (makelaars)",
            },
        ),
        migrations.CreateModel(
            name="Wish",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "city",
                    models.CharField(max_length=120, verbose_name="Gewenste stad"),
                ),
                (
                    "province",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="Gewenste provincie"
                    ),
                ),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("appartement", "Appartement"),
                            ("eengezinswoning", "Eengezinswoning"),
                            ("villa", "Villa"),
                            ("studio", "Studio"),
                            ("ander", "Anders"),
                        ],
                        max_length=20,
                        verbose_name="Type woning",
                    ),
                ),
                (
                    "min_area",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Minimale woonoppervlakte (mÂ²)",
                    ),
                ),
                (
                    "min_rooms",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Minimaal aantal kamers"
                    ),
                ),
                (
                    "balcony",
                    models.BooleanField(default=False, verbose_name="Balkon gewenst"),
                ),
                (
                    "terrace",
                    models.BooleanField(default=False, verbose_name="Terras gewenst"),
                ),
                (
                    "garden",
                    models.BooleanField(default=False, verbose_name="Tuin gewenst"),
                ),
                (
                    "storage",
                    models.BooleanField(default=False, verbose_name="Berging gewenst"),
                ),
                (
                    "attic",
                    models.BooleanField(default=False, verbose_name="Zolder gewenst"),
                ),
                (
                    "cellar",
                    models.BooleanField(default=False, verbose_name="Kelder gewenst"),
                ),
                (
                    "parking_private",
                    models.BooleanField(
                        default=False, verbose_name="Parkeerplaats gewenst"
                    ),
                ),
                (
                    "ov",
                    models.BooleanField(
                        default=False, verbose_name="Dichtbij OV gewenst"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Wenswoning",
                "verbose_name_plural": "Wenswoningen",
            },
        ),
    ]
